// ----------------------------------------------------------------------------------------------
//
// Создание zip архива с файлами проекта
//
// Вызывается командой в терминале: `npm run zip`
//
// Просто воспользуйтесь командой в терминале `npm run zip` и проект запакует все файлы
// вашего сайта в архив `archive.zip` и расположит его в корневой папке проека.
//
//
// Copyright (c) 2024 Oleksii Myronenko (https://mrnko.com)
//
// ----------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------
// Подключение зависимостей
// ----------------------------------------------------------------------------------------------
import fs from 'fs-extra';
import archiver from 'archiver';
import path from 'path';

// ----------------------------------------------------------------------------------------------
// Переменные среды
// ----------------------------------------------------------------------------------------------
const archiveName = 'archive.zip';

// ----------------------------------------------------------------------------------------------
// Объявление о запуске скрипта
// ----------------------------------------------------------------------------------------------
async function scriptStartMessage() {
  console.warn('Запуск процесса создания архива из файлов проекта...');
}

// ----------------------------------------------------------------------------------------------
// Функция создания архива из файлов проекта
// ----------------------------------------------------------------------------------------------
async function createArchive() {
  try {
    const outputPath = path.join(process.cwd(), archiveName);
    const output = fs.createWriteStream(outputPath);
    const archive = archiver('zip', {
      zlib: { level: 2 }
    });

    output.on('close', () => {
      console.log('\x1b[32m%s\x1b[0m', `Архив проекта был успешно создан и перемещен в корневую директорию под названием "archive.zip". Размер архива: ${archive.pointer()} байт.`);
    });

    output.on('end', () => {
      console.log('Поток данных завершён.');
    });

    archive.on('warning', (err) => {
      if (err.code === 'ENOENT') {
        console.warn('Предупреждение:', err);
      } else {
        throw err;
      }
    });

    archive.on('error', (err) => {
      console.error('Ошибка архивации:', err);
      throw err;
    });

    archive.on('progress', (progress) => {
      console.log(`Архивировано ${progress.entries.processed} из ${progress.entries.total} записей.`);
    });

    archive.pipe(output);

    console.log('Добавление файлов в архив...');

    archive.glob('**/*', {
      cwd: process.cwd(),
      ignore: ['node_modules/**']
    });

    console.log('Финализация архива...');
    await archive.finalize();

    output.end();
    console.log('\x1b[32m%s\x1b[0m', 'Архивация была успешно завершена.');
  } catch (err) {
    console.error('Ошибка при создании архива:', err);
  }
}

// ----------------------------------------------------------------------------------------------
// Собираем все функции в одну
// ----------------------------------------------------------------------------------------------
async function zip() {
  await scriptStartMessage();
  await createArchive();
}

// ----------------------------------------------------------------------------------------------
// Запускаем процесс создания архива из папок сайта
// ----------------------------------------------------------------------------------------------
zip();